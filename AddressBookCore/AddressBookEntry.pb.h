// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AddressBookEntry.proto

#ifndef PROTOBUF_AddressBookEntry_2eproto__INCLUDED
#define PROTOBUF_AddressBookEntry_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace Abook {
class AddressBookEntry;
class AddressBookEntryDefaultTypeInternal;
extern AddressBookEntryDefaultTypeInternal _AddressBookEntry_default_instance_;
}  // namespace Abook

namespace Abook {

namespace protobuf_AddressBookEntry_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_AddressBookEntry_2eproto

// ===================================================================

class AddressBookEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Abook.AddressBookEntry) */ {
 public:
  AddressBookEntry();
  virtual ~AddressBookEntry();

  AddressBookEntry(const AddressBookEntry& from);

  inline AddressBookEntry& operator=(const AddressBookEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddressBookEntry(AddressBookEntry&& from) noexcept
    : AddressBookEntry() {
    *this = ::std::move(from);
  }

  inline AddressBookEntry& operator=(AddressBookEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddressBookEntry& default_instance();

  static inline const AddressBookEntry* internal_default_instance() {
    return reinterpret_cast<const AddressBookEntry*>(
               &_AddressBookEntry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AddressBookEntry* other);
  friend void swap(AddressBookEntry& a, AddressBookEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddressBookEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  AddressBookEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddressBookEntry& from);
  void MergeFrom(const AddressBookEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddressBookEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string firstName = 2;
  void clear_firstname();
  static const int kFirstNameFieldNumber = 2;
  const ::std::string& firstname() const;
  void set_firstname(const ::std::string& value);
  #if LANG_CXX11
  void set_firstname(::std::string&& value);
  #endif
  void set_firstname(const char* value);
  void set_firstname(const char* value, size_t size);
  ::std::string* mutable_firstname();
  ::std::string* release_firstname();
  void set_allocated_firstname(::std::string* firstname);

  // string lastName = 3;
  void clear_lastname();
  static const int kLastNameFieldNumber = 3;
  const ::std::string& lastname() const;
  void set_lastname(const ::std::string& value);
  #if LANG_CXX11
  void set_lastname(::std::string&& value);
  #endif
  void set_lastname(const char* value);
  void set_lastname(const char* value, size_t size);
  ::std::string* mutable_lastname();
  ::std::string* release_lastname();
  void set_allocated_lastname(::std::string* lastname);

  // string address = 4;
  void clear_address();
  static const int kAddressFieldNumber = 4;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // string city = 6;
  void clear_city();
  static const int kCityFieldNumber = 6;
  const ::std::string& city() const;
  void set_city(const ::std::string& value);
  #if LANG_CXX11
  void set_city(::std::string&& value);
  #endif
  void set_city(const char* value);
  void set_city(const char* value, size_t size);
  ::std::string* mutable_city();
  ::std::string* release_city();
  void set_allocated_city(::std::string* city);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 postalCode = 5;
  void clear_postalcode();
  static const int kPostalCodeFieldNumber = 5;
  ::google::protobuf::int32 postalcode() const;
  void set_postalcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Abook.AddressBookEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr firstname_;
  ::google::protobuf::internal::ArenaStringPtr lastname_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::internal::ArenaStringPtr city_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 postalcode_;
  mutable int _cached_size_;
  friend struct protobuf_AddressBookEntry_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AddressBookEntry

// int32 id = 1;
inline void AddressBookEntry::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 AddressBookEntry::id() const {
  // @@protoc_insertion_point(field_get:Abook.AddressBookEntry.id)
  return id_;
}
inline void AddressBookEntry::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Abook.AddressBookEntry.id)
}

// string firstName = 2;
inline void AddressBookEntry::clear_firstname() {
  firstname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddressBookEntry::firstname() const {
  // @@protoc_insertion_point(field_get:Abook.AddressBookEntry.firstName)
  return firstname_.GetNoArena();
}
inline void AddressBookEntry::set_firstname(const ::std::string& value) {
  
  firstname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Abook.AddressBookEntry.firstName)
}
#if LANG_CXX11
inline void AddressBookEntry::set_firstname(::std::string&& value) {
  
  firstname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Abook.AddressBookEntry.firstName)
}
#endif
inline void AddressBookEntry::set_firstname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  firstname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Abook.AddressBookEntry.firstName)
}
inline void AddressBookEntry::set_firstname(const char* value, size_t size) {
  
  firstname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Abook.AddressBookEntry.firstName)
}
inline ::std::string* AddressBookEntry::mutable_firstname() {
  
  // @@protoc_insertion_point(field_mutable:Abook.AddressBookEntry.firstName)
  return firstname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddressBookEntry::release_firstname() {
  // @@protoc_insertion_point(field_release:Abook.AddressBookEntry.firstName)
  
  return firstname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddressBookEntry::set_allocated_firstname(::std::string* firstname) {
  if (firstname != NULL) {
    
  } else {
    
  }
  firstname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), firstname);
  // @@protoc_insertion_point(field_set_allocated:Abook.AddressBookEntry.firstName)
}

// string lastName = 3;
inline void AddressBookEntry::clear_lastname() {
  lastname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddressBookEntry::lastname() const {
  // @@protoc_insertion_point(field_get:Abook.AddressBookEntry.lastName)
  return lastname_.GetNoArena();
}
inline void AddressBookEntry::set_lastname(const ::std::string& value) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Abook.AddressBookEntry.lastName)
}
#if LANG_CXX11
inline void AddressBookEntry::set_lastname(::std::string&& value) {
  
  lastname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Abook.AddressBookEntry.lastName)
}
#endif
inline void AddressBookEntry::set_lastname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Abook.AddressBookEntry.lastName)
}
inline void AddressBookEntry::set_lastname(const char* value, size_t size) {
  
  lastname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Abook.AddressBookEntry.lastName)
}
inline ::std::string* AddressBookEntry::mutable_lastname() {
  
  // @@protoc_insertion_point(field_mutable:Abook.AddressBookEntry.lastName)
  return lastname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddressBookEntry::release_lastname() {
  // @@protoc_insertion_point(field_release:Abook.AddressBookEntry.lastName)
  
  return lastname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddressBookEntry::set_allocated_lastname(::std::string* lastname) {
  if (lastname != NULL) {
    
  } else {
    
  }
  lastname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastname);
  // @@protoc_insertion_point(field_set_allocated:Abook.AddressBookEntry.lastName)
}

// string address = 4;
inline void AddressBookEntry::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddressBookEntry::address() const {
  // @@protoc_insertion_point(field_get:Abook.AddressBookEntry.address)
  return address_.GetNoArena();
}
inline void AddressBookEntry::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Abook.AddressBookEntry.address)
}
#if LANG_CXX11
inline void AddressBookEntry::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Abook.AddressBookEntry.address)
}
#endif
inline void AddressBookEntry::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Abook.AddressBookEntry.address)
}
inline void AddressBookEntry::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Abook.AddressBookEntry.address)
}
inline ::std::string* AddressBookEntry::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:Abook.AddressBookEntry.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddressBookEntry::release_address() {
  // @@protoc_insertion_point(field_release:Abook.AddressBookEntry.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddressBookEntry::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:Abook.AddressBookEntry.address)
}

// int32 postalCode = 5;
inline void AddressBookEntry::clear_postalcode() {
  postalcode_ = 0;
}
inline ::google::protobuf::int32 AddressBookEntry::postalcode() const {
  // @@protoc_insertion_point(field_get:Abook.AddressBookEntry.postalCode)
  return postalcode_;
}
inline void AddressBookEntry::set_postalcode(::google::protobuf::int32 value) {
  
  postalcode_ = value;
  // @@protoc_insertion_point(field_set:Abook.AddressBookEntry.postalCode)
}

// string city = 6;
inline void AddressBookEntry::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddressBookEntry::city() const {
  // @@protoc_insertion_point(field_get:Abook.AddressBookEntry.city)
  return city_.GetNoArena();
}
inline void AddressBookEntry::set_city(const ::std::string& value) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Abook.AddressBookEntry.city)
}
#if LANG_CXX11
inline void AddressBookEntry::set_city(::std::string&& value) {
  
  city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Abook.AddressBookEntry.city)
}
#endif
inline void AddressBookEntry::set_city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Abook.AddressBookEntry.city)
}
inline void AddressBookEntry::set_city(const char* value, size_t size) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Abook.AddressBookEntry.city)
}
inline ::std::string* AddressBookEntry::mutable_city() {
  
  // @@protoc_insertion_point(field_mutable:Abook.AddressBookEntry.city)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddressBookEntry::release_city() {
  // @@protoc_insertion_point(field_release:Abook.AddressBookEntry.city)
  
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddressBookEntry::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    
  } else {
    
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:Abook.AddressBookEntry.city)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace Abook

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AddressBookEntry_2eproto__INCLUDED
